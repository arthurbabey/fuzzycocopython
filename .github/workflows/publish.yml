name: Publish (TestPyPI)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version being published (for logging only)"
        required: false

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up uv with Python
        uses: astral-sh/setup-uv@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: uv pip install --system build ninja cmake

      - name: Build wheel
        run: |
          uv run python -c "import shutil; shutil.rmtree('wheelhouse', ignore_errors=True)"
          uv run python -m build --wheel --outdir wheelhouse

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up uv with Python
        uses: astral-sh/setup-uv@v2
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: uv pip install --system build

      - name: Build sdist
        run: |
          uv run python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
          uv run python -m build --sdist --outdir dist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish-testpypi:
    runs-on: ubuntu-latest
    needs:
      - build-wheels
      - build-sdist
    environment: testpypi
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -R dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.10.3
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          packages-dir: dist
          repository-url: https://test.pypi.org/legacy/

      # Uncomment the step below once you are ready to publish to the real PyPI registry.
      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@v1.10.3
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_API_TOKEN }}
      #     packages-dir: dist
